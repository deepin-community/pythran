From: "Diego M. Rodriguez" <diego@moreda.io>
Date: Mon, 22 Nov 2021 12:27:17 +0100
Subject: Enhance atlas auto detection

Add more automation for attempting to find the atlas libraries when
the config file specifies a generic blas, by searching through the
list of libraries and directories returned by numpy.
---
 pythran/config.py | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

Index: pythran/pythran/config.py
===================================================================
--- pythran.orig/pythran/config.py	2023-01-08 14:09:35.590357031 +0100
+++ pythran/pythran/config.py	2023-01-08 14:13:02.132479091 +0100
@@ -8,6 +8,7 @@
 import os
 from shlex import split as shsplit
 import sys
+from itertools import product
 
 import numpy
 
@@ -253,9 +254,17 @@
                  # Numpy can pollute stdout with checks
                 with silent():
                     numpy_blas = numpy_sys.get_info(user_blas)
-                    # required to cope with atlas missing extern "C"
-                    extension['define_macros'].append('PYTHRAN_BLAS_{}'
-                                                      .format(user_blas.upper()))
+                    # Potential paths of the atlas libraries.
+                    library_files = [os.path.join(dir, "lib{}.so".format(lib))
+                                     for dir, lib in product(numpy_blas["library_dirs"],
+                                                             numpy_blas["libraries"])]
+
+                    if any('atlas' in os.path.realpath(f) for f in library_files):
+                        extension['define_macros'].append('PYTHRAN_BLAS_ATLAS')
+                    else:
+                        # required to cope with atlas missing extern "C"
+                        extension['define_macros'].append('PYTHRAN_BLAS_{}'
+                                                          .format(user_blas.upper()))
                     extension['libraries'].extend(numpy_blas.get('libraries', []))
                     extension['library_dirs'].extend(
                         numpy_blas.get('library_dirs', []))
